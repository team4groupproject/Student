<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="TinyCollegeDB1DataSet" targetNamespace="http://tempuri.org/TinyCollegeDB1DataSet.xsd" xmlns:mstns="http://tempuri.org/TinyCollegeDB1DataSet.xsd" xmlns="http://tempuri.org/TinyCollegeDB1DataSet.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="TinyCollegeDB1ConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="TinyCollegeDB1ConnectionString (Settings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.Student.Properties.Settings.GlobalReference.Default.TinyCollegeDB1ConnectionString" Provider="System.Data.SqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="courseTableAdapter" GeneratorDataComponentClassName="courseTableAdapter" Name="course" UserDataComponentName="courseTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="TinyCollegeDB1ConnectionString (Settings)" DbObjectName="TinyCollegeDB1.dbo.course" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[course] WHERE (([courseId] = @Original_courseId) AND ([courseName] = @Original_courseName) AND ([courseStatus] = @Original_courseStatus) AND ([courseCreditHours] = @Original_courseCreditHours) AND ([courseMaxNumSeats] = @Original_courseMaxNumSeats))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_courseId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="courseId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_courseName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="courseName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiStringFixedLength" Direction="Input" ParameterName="@Original_courseStatus" Precision="0" ProviderType="Char" Scale="0" Size="0" SourceColumn="courseStatus" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_courseCreditHours" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="courseCreditHours" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_courseMaxNumSeats" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="courseMaxNumSeats" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[course] ([courseName], [courseStatus], [courseCreditHours], [courseMaxNumSeats]) VALUES (@courseName, @courseStatus, @courseCreditHours, @courseMaxNumSeats);
SELECT courseId, courseName, courseStatus, courseCreditHours, courseMaxNumSeats FROM course WHERE (courseId = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@courseName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="courseName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiStringFixedLength" Direction="Input" ParameterName="@courseStatus" Precision="0" ProviderType="Char" Scale="0" Size="0" SourceColumn="courseStatus" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@courseCreditHours" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="courseCreditHours" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@courseMaxNumSeats" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="courseMaxNumSeats" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT courseId, courseName, courseStatus, courseCreditHours, courseMaxNumSeats FROM dbo.course</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[course] SET [courseName] = @courseName, [courseStatus] = @courseStatus, [courseCreditHours] = @courseCreditHours, [courseMaxNumSeats] = @courseMaxNumSeats WHERE (([courseId] = @Original_courseId) AND ([courseName] = @Original_courseName) AND ([courseStatus] = @Original_courseStatus) AND ([courseCreditHours] = @Original_courseCreditHours) AND ([courseMaxNumSeats] = @Original_courseMaxNumSeats));
SELECT courseId, courseName, courseStatus, courseCreditHours, courseMaxNumSeats FROM course WHERE (courseId = @courseId)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@courseName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="courseName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiStringFixedLength" Direction="Input" ParameterName="@courseStatus" Precision="0" ProviderType="Char" Scale="0" Size="0" SourceColumn="courseStatus" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@courseCreditHours" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="courseCreditHours" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@courseMaxNumSeats" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="courseMaxNumSeats" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_courseId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="courseId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_courseName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="courseName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiStringFixedLength" Direction="Input" ParameterName="@Original_courseStatus" Precision="0" ProviderType="Char" Scale="0" Size="0" SourceColumn="courseStatus" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_courseCreditHours" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="courseCreditHours" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_courseMaxNumSeats" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="courseMaxNumSeats" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="courseId" ColumnName="courseId" DataSourceName="TinyCollegeDB1.dbo.course" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@courseId" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="courseId" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="courseId" DataSetColumn="courseId" />
              <Mapping SourceColumn="courseName" DataSetColumn="courseName" />
              <Mapping SourceColumn="courseStatus" DataSetColumn="courseStatus" />
              <Mapping SourceColumn="courseCreditHours" DataSetColumn="courseCreditHours" />
              <Mapping SourceColumn="courseMaxNumSeats" DataSetColumn="courseMaxNumSeats" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="instructorTableAdapter" GeneratorDataComponentClassName="instructorTableAdapter" Name="instructor" UserDataComponentName="instructorTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="TinyCollegeDB1ConnectionString (Settings)" DbObjectName="TinyCollegeDB1.dbo.instructor" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[instructor] WHERE (([instructorId] = @Original_instructorId) AND ([instructorFirstName] = @Original_instructorFirstName) AND ([instructorLastName] = @Original_instructorLastName))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_instructorId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="instructorId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_instructorFirstName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="instructorFirstName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_instructorLastName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="instructorLastName" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[instructor] ([instructorFirstName], [instructorLastName]) VALUES (@instructorFirstName, @instructorLastName);
SELECT instructorId, instructorFirstName, instructorLastName FROM instructor WHERE (instructorId = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@instructorFirstName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="instructorFirstName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@instructorLastName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="instructorLastName" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT instructorId, instructorFirstName, instructorLastName FROM dbo.instructor</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[instructor] SET [instructorFirstName] = @instructorFirstName, [instructorLastName] = @instructorLastName WHERE (([instructorId] = @Original_instructorId) AND ([instructorFirstName] = @Original_instructorFirstName) AND ([instructorLastName] = @Original_instructorLastName));
SELECT instructorId, instructorFirstName, instructorLastName FROM instructor WHERE (instructorId = @instructorId)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@instructorFirstName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="instructorFirstName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@instructorLastName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="instructorLastName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_instructorId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="instructorId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_instructorFirstName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="instructorFirstName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_instructorLastName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="instructorLastName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="instructorId" ColumnName="instructorId" DataSourceName="TinyCollegeDB1.dbo.instructor" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@instructorId" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="instructorId" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="instructorId" DataSetColumn="instructorId" />
              <Mapping SourceColumn="instructorFirstName" DataSetColumn="instructorFirstName" />
              <Mapping SourceColumn="instructorLastName" DataSetColumn="instructorLastName" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="registrationTableAdapter" GeneratorDataComponentClassName="registrationTableAdapter" Name="registration" UserDataComponentName="registrationTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="TinyCollegeDB1ConnectionString (Settings)" DbObjectName="TinyCollegeDB1.dbo.registration" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[registration] WHERE (([registrationId] = @Original_registrationId) AND ([sessionId] = @Original_sessionId) AND ([studentId] = @Original_studentId))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_registrationId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="registrationId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_sessionId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="sessionId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_studentId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="studentId" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[registration] ([sessionId], [studentId]) VALUES (@sessionId, @studentId);
SELECT registrationId, sessionId, studentId FROM registration WHERE (registrationId = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@sessionId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="sessionId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@studentId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="studentId" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT registrationId, sessionId, studentId FROM dbo.registration</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[registration] SET [sessionId] = @sessionId, [studentId] = @studentId WHERE (([registrationId] = @Original_registrationId) AND ([sessionId] = @Original_sessionId) AND ([studentId] = @Original_studentId));
SELECT registrationId, sessionId, studentId FROM registration WHERE (registrationId = @registrationId)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@sessionId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="sessionId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@studentId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="studentId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_registrationId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="registrationId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_sessionId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="sessionId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_studentId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="studentId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="registrationId" ColumnName="registrationId" DataSourceName="TinyCollegeDB1.dbo.registration" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@registrationId" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="registrationId" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="registrationId" DataSetColumn="registrationId" />
              <Mapping SourceColumn="sessionId" DataSetColumn="sessionId" />
              <Mapping SourceColumn="studentId" DataSetColumn="studentId" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="sessionTableAdapter" GeneratorDataComponentClassName="sessionTableAdapter" Name="session" UserDataComponentName="sessionTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="TinyCollegeDB1ConnectionString (Settings)" DbObjectName="TinyCollegeDB1.dbo.session" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[session] WHERE (([sessionId] = @Original_sessionId) AND ([sessionSeatsFilled] = @Original_sessionSeatsFilled) AND ([instructorId] = @Original_instructorId) AND ([courseId] = @Original_courseId))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_sessionId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="sessionId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_sessionSeatsFilled" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="sessionSeatsFilled" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_instructorId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="instructorId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_courseId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="courseId" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[session] ([sessionSeatsFilled], [instructorId], [courseId]) VALUES (@sessionSeatsFilled, @instructorId, @courseId);
SELECT sessionId, sessionSeatsFilled, instructorId, courseId FROM session WHERE (sessionId = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@sessionSeatsFilled" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="sessionSeatsFilled" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@instructorId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="instructorId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@courseId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="courseId" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT sessionId, sessionSeatsFilled, instructorId, courseId FROM dbo.session</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[session] SET [sessionSeatsFilled] = @sessionSeatsFilled, [instructorId] = @instructorId, [courseId] = @courseId WHERE (([sessionId] = @Original_sessionId) AND ([sessionSeatsFilled] = @Original_sessionSeatsFilled) AND ([instructorId] = @Original_instructorId) AND ([courseId] = @Original_courseId));
SELECT sessionId, sessionSeatsFilled, instructorId, courseId FROM session WHERE (sessionId = @sessionId)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@sessionSeatsFilled" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="sessionSeatsFilled" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@instructorId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="instructorId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@courseId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="courseId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_sessionId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="sessionId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_sessionSeatsFilled" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="sessionSeatsFilled" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_instructorId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="instructorId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_courseId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="courseId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="sessionId" ColumnName="sessionId" DataSourceName="TinyCollegeDB1.dbo.session" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@sessionId" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="sessionId" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="sessionId" DataSetColumn="sessionId" />
              <Mapping SourceColumn="sessionSeatsFilled" DataSetColumn="sessionSeatsFilled" />
              <Mapping SourceColumn="instructorId" DataSetColumn="instructorId" />
              <Mapping SourceColumn="courseId" DataSetColumn="courseId" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="studentTableAdapter" GeneratorDataComponentClassName="studentTableAdapter" Name="student" UserDataComponentName="studentTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="TinyCollegeDB1ConnectionString (Settings)" DbObjectName="TinyCollegeDB1.dbo.student" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[student] WHERE (([studentId] = @Original_studentId) AND ([studentFirstName] = @Original_studentFirstName) AND ([studentLastName] = @Original_studentLastName))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_studentId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="studentId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_studentFirstName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="studentFirstName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_studentLastName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="studentLastName" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[student] ([studentFirstName], [studentLastName]) VALUES (@studentFirstName, @studentLastName);
SELECT studentId, studentFirstName, studentLastName FROM student WHERE (studentId = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@studentFirstName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="studentFirstName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@studentLastName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="studentLastName" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT studentId, studentFirstName, studentLastName FROM dbo.student</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[student] SET [studentFirstName] = @studentFirstName, [studentLastName] = @studentLastName WHERE (([studentId] = @Original_studentId) AND ([studentFirstName] = @Original_studentFirstName) AND ([studentLastName] = @Original_studentLastName));
SELECT studentId, studentFirstName, studentLastName FROM student WHERE (studentId = @studentId)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@studentFirstName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="studentFirstName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@studentLastName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="studentLastName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_studentId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="studentId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_studentFirstName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="studentFirstName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_studentLastName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="studentLastName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="studentId" ColumnName="studentId" DataSourceName="TinyCollegeDB1.dbo.student" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@studentId" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="studentId" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="studentId" DataSetColumn="studentId" />
              <Mapping SourceColumn="studentFirstName" DataSetColumn="studentFirstName" />
              <Mapping SourceColumn="studentLastName" DataSetColumn="studentLastName" />
            </Mappings>
            <Sources />
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="TinyCollegeDB1DataSet" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:EnableTableAdapterManager="True" msprop:Generator_DataSetName="TinyCollegeDB1DataSet" msprop:Generator_UserDSName="TinyCollegeDB1DataSet">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="course" msprop:Generator_TableClassName="courseDataTable" msprop:Generator_TableVarName="tablecourse" msprop:Generator_TablePropName="course" msprop:Generator_RowDeletingName="courseRowDeleting" msprop:Generator_RowChangingName="courseRowChanging" msprop:Generator_RowEvHandlerName="courseRowChangeEventHandler" msprop:Generator_RowDeletedName="courseRowDeleted" msprop:Generator_UserTableName="course" msprop:Generator_RowChangedName="courseRowChanged" msprop:Generator_RowEvArgName="courseRowChangeEvent" msprop:Generator_RowClassName="courseRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="courseId" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columncourseId" msprop:Generator_ColumnPropNameInRow="courseId" msprop:Generator_ColumnPropNameInTable="courseIdColumn" msprop:Generator_UserColumnName="courseId" type="xs:int" />
              <xs:element name="courseName" msprop:Generator_ColumnVarNameInTable="columncourseName" msprop:Generator_ColumnPropNameInRow="courseName" msprop:Generator_ColumnPropNameInTable="courseNameColumn" msprop:Generator_UserColumnName="courseName">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="100" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="courseStatus" msprop:Generator_ColumnVarNameInTable="columncourseStatus" msprop:Generator_ColumnPropNameInRow="courseStatus" msprop:Generator_ColumnPropNameInTable="courseStatusColumn" msprop:Generator_UserColumnName="courseStatus">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="1" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="courseCreditHours" msprop:Generator_ColumnVarNameInTable="columncourseCreditHours" msprop:Generator_ColumnPropNameInRow="courseCreditHours" msprop:Generator_ColumnPropNameInTable="courseCreditHoursColumn" msprop:Generator_UserColumnName="courseCreditHours" type="xs:int" />
              <xs:element name="courseMaxNumSeats" msprop:Generator_ColumnVarNameInTable="columncourseMaxNumSeats" msprop:Generator_ColumnPropNameInRow="courseMaxNumSeats" msprop:Generator_ColumnPropNameInTable="courseMaxNumSeatsColumn" msprop:Generator_UserColumnName="courseMaxNumSeats" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="instructor" msprop:Generator_TableClassName="instructorDataTable" msprop:Generator_TableVarName="tableinstructor" msprop:Generator_TablePropName="instructor" msprop:Generator_RowDeletingName="instructorRowDeleting" msprop:Generator_RowChangingName="instructorRowChanging" msprop:Generator_RowEvHandlerName="instructorRowChangeEventHandler" msprop:Generator_RowDeletedName="instructorRowDeleted" msprop:Generator_UserTableName="instructor" msprop:Generator_RowChangedName="instructorRowChanged" msprop:Generator_RowEvArgName="instructorRowChangeEvent" msprop:Generator_RowClassName="instructorRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="instructorId" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columninstructorId" msprop:Generator_ColumnPropNameInRow="instructorId" msprop:Generator_ColumnPropNameInTable="instructorIdColumn" msprop:Generator_UserColumnName="instructorId" type="xs:int" />
              <xs:element name="instructorFirstName" msprop:Generator_ColumnVarNameInTable="columninstructorFirstName" msprop:Generator_ColumnPropNameInRow="instructorFirstName" msprop:Generator_ColumnPropNameInTable="instructorFirstNameColumn" msprop:Generator_UserColumnName="instructorFirstName">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="100" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="instructorLastName" msprop:Generator_ColumnVarNameInTable="columninstructorLastName" msprop:Generator_ColumnPropNameInRow="instructorLastName" msprop:Generator_ColumnPropNameInTable="instructorLastNameColumn" msprop:Generator_UserColumnName="instructorLastName">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="100" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="registration" msprop:Generator_TableClassName="registrationDataTable" msprop:Generator_TableVarName="tableregistration" msprop:Generator_TablePropName="registration" msprop:Generator_RowDeletingName="registrationRowDeleting" msprop:Generator_RowChangingName="registrationRowChanging" msprop:Generator_RowEvHandlerName="registrationRowChangeEventHandler" msprop:Generator_RowDeletedName="registrationRowDeleted" msprop:Generator_UserTableName="registration" msprop:Generator_RowChangedName="registrationRowChanged" msprop:Generator_RowEvArgName="registrationRowChangeEvent" msprop:Generator_RowClassName="registrationRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="registrationId" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnregistrationId" msprop:Generator_ColumnPropNameInRow="registrationId" msprop:Generator_ColumnPropNameInTable="registrationIdColumn" msprop:Generator_UserColumnName="registrationId" type="xs:int" />
              <xs:element name="sessionId" msprop:Generator_ColumnVarNameInTable="columnsessionId" msprop:Generator_ColumnPropNameInRow="sessionId" msprop:Generator_ColumnPropNameInTable="sessionIdColumn" msprop:Generator_UserColumnName="sessionId" type="xs:int" />
              <xs:element name="studentId" msprop:Generator_ColumnVarNameInTable="columnstudentId" msprop:Generator_ColumnPropNameInRow="studentId" msprop:Generator_ColumnPropNameInTable="studentIdColumn" msprop:Generator_UserColumnName="studentId" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="session" msprop:Generator_TableClassName="sessionDataTable" msprop:Generator_TableVarName="tablesession" msprop:Generator_TablePropName="session" msprop:Generator_RowDeletingName="sessionRowDeleting" msprop:Generator_RowChangingName="sessionRowChanging" msprop:Generator_RowEvHandlerName="sessionRowChangeEventHandler" msprop:Generator_RowDeletedName="sessionRowDeleted" msprop:Generator_UserTableName="session" msprop:Generator_RowChangedName="sessionRowChanged" msprop:Generator_RowEvArgName="sessionRowChangeEvent" msprop:Generator_RowClassName="sessionRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="sessionId" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnsessionId" msprop:Generator_ColumnPropNameInRow="sessionId" msprop:Generator_ColumnPropNameInTable="sessionIdColumn" msprop:Generator_UserColumnName="sessionId" type="xs:int" />
              <xs:element name="sessionSeatsFilled" msprop:Generator_ColumnVarNameInTable="columnsessionSeatsFilled" msprop:Generator_ColumnPropNameInRow="sessionSeatsFilled" msprop:Generator_ColumnPropNameInTable="sessionSeatsFilledColumn" msprop:Generator_UserColumnName="sessionSeatsFilled" type="xs:int" />
              <xs:element name="instructorId" msprop:Generator_ColumnVarNameInTable="columninstructorId" msprop:Generator_ColumnPropNameInRow="instructorId" msprop:Generator_ColumnPropNameInTable="instructorIdColumn" msprop:Generator_UserColumnName="instructorId" type="xs:int" />
              <xs:element name="courseId" msprop:Generator_ColumnVarNameInTable="columncourseId" msprop:Generator_ColumnPropNameInRow="courseId" msprop:Generator_ColumnPropNameInTable="courseIdColumn" msprop:Generator_UserColumnName="courseId" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="student" msprop:Generator_TableClassName="studentDataTable" msprop:Generator_TableVarName="tablestudent" msprop:Generator_TablePropName="student" msprop:Generator_RowDeletingName="studentRowDeleting" msprop:Generator_RowChangingName="studentRowChanging" msprop:Generator_RowEvHandlerName="studentRowChangeEventHandler" msprop:Generator_RowDeletedName="studentRowDeleted" msprop:Generator_UserTableName="student" msprop:Generator_RowChangedName="studentRowChanged" msprop:Generator_RowEvArgName="studentRowChangeEvent" msprop:Generator_RowClassName="studentRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="studentId" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnstudentId" msprop:Generator_ColumnPropNameInRow="studentId" msprop:Generator_ColumnPropNameInTable="studentIdColumn" msprop:Generator_UserColumnName="studentId" type="xs:int" />
              <xs:element name="studentFirstName" msprop:Generator_ColumnVarNameInTable="columnstudentFirstName" msprop:Generator_ColumnPropNameInRow="studentFirstName" msprop:Generator_ColumnPropNameInTable="studentFirstNameColumn" msprop:Generator_UserColumnName="studentFirstName">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="100" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="studentLastName" msprop:Generator_ColumnVarNameInTable="columnstudentLastName" msprop:Generator_ColumnPropNameInRow="studentLastName" msprop:Generator_ColumnPropNameInTable="studentLastNameColumn" msprop:Generator_UserColumnName="studentLastName">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="100" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:course" />
      <xs:field xpath="mstns:courseId" />
    </xs:unique>
    <xs:unique name="instructor_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:instructor" />
      <xs:field xpath="mstns:instructorId" />
    </xs:unique>
    <xs:unique name="registration_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:registration" />
      <xs:field xpath="mstns:registrationId" />
    </xs:unique>
    <xs:unique name="session_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:session" />
      <xs:field xpath="mstns:sessionId" />
    </xs:unique>
    <xs:unique name="student_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:student" />
      <xs:field xpath="mstns:studentId" />
    </xs:unique>
  </xs:element>
  <xs:annotation>
    <xs:appinfo>
      <msdata:Relationship name="fk_registration_session" msdata:parent="session" msdata:child="registration" msdata:parentkey="sessionId" msdata:childkey="sessionId" msprop:Generator_UserChildTable="registration" msprop:Generator_ChildPropName="GetregistrationRows" msprop:Generator_UserRelationName="fk_registration_session" msprop:Generator_RelationVarName="relationfk_registration_session" msprop:Generator_UserParentTable="session" msprop:Generator_ParentPropName="sessionRow" />
      <msdata:Relationship name="fk_registration_student" msdata:parent="student" msdata:child="registration" msdata:parentkey="studentId" msdata:childkey="studentId" msprop:Generator_UserChildTable="registration" msprop:Generator_ChildPropName="GetregistrationRows" msprop:Generator_UserRelationName="fk_registration_student" msprop:Generator_RelationVarName="relationfk_registration_student" msprop:Generator_UserParentTable="student" msprop:Generator_ParentPropName="studentRow" />
      <msdata:Relationship name="fk_session_course" msdata:parent="course" msdata:child="session" msdata:parentkey="courseId" msdata:childkey="courseId" msprop:Generator_UserChildTable="session" msprop:Generator_ChildPropName="GetsessionRows" msprop:Generator_UserRelationName="fk_session_course" msprop:Generator_ParentPropName="courseRow" msprop:Generator_RelationVarName="relationfk_session_course" msprop:Generator_UserParentTable="course" />
      <msdata:Relationship name="fk_session_instructor" msdata:parent="instructor" msdata:child="session" msdata:parentkey="instructorId" msdata:childkey="instructorId" msprop:Generator_UserChildTable="session" msprop:Generator_ChildPropName="GetsessionRows" msprop:Generator_UserRelationName="fk_session_instructor" msprop:Generator_ParentPropName="instructorRow" msprop:Generator_RelationVarName="relationfk_session_instructor" msprop:Generator_UserParentTable="instructor" />
    </xs:appinfo>
  </xs:annotation>
</xs:schema>